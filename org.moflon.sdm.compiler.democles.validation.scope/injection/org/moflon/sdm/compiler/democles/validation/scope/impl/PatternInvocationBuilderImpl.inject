
import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.ecore.EOperation;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.gervarro.democles.common.Adornment;

partial class PatternInvocationBuilderImpl {



@model attachToResource (CFNode node, Pattern pattern) <--

      EClass eClass = node.getOrigin().getOwningActivity().getOwningOperation().getEContainingClass();
      Resource patternResource = (Resource) EcoreUtil.getRegisteredAdapter(eClass, getSuffix());
      if (patternResource != null)
      {
         patternResource.getContents().add(pattern);
      }
-->

@model calculateAdornment (PatternInvocation invocation) <--

      List<VariableReference> parameters = invocation.getParameters();
      Adornment adornment = new Adornment(parameters.size());
      for (int i = 0; i < parameters.size(); i++)
      {
         adornment.set(i, parameters.get(i).isFree() ? Adornment.FREE : Adornment.BOUND);
      }
      return adornment;
-->

@model calculatePatternName (CFNode node) <--

      final EOperation eOperation = node.getOrigin().getOwningActivity().getOwningOperation();
      String storyNodeName = node.getOrigin().getName() != null ? node.getOrigin().getName().trim() : "";
      storyNodeName = storyNodeName.replaceAll("\\s+", "");
      final EClass eClass = eOperation.getEContainingClass();
      final int operationIndex = eClass.getEOperations().indexOf(eOperation);
      if (storyNodeName.matches("[_a-zA-Z\\d]+"))
         return "pattern_" + eClass.getName() + "_" + operationIndex + "_" + node.getId() + "_" + storyNodeName + "_" + getSuffix();
      else
      {
         return "pattern_" + eClass.getName() + "_" + operationIndex + "_" + node.getId() + "_" + getSuffix();
      }
-->

}