VariableName(variable) ::= <<
<first(variable.parameters).specification.name; format="lowercase">
>>

VariableTypeAndName(variable, importManager) ::= <<
<importManager.(variable.type)> <VariableName(variable)>
>>

AllMatches(engine, importManager, body, chain) ::= <<
result.add(new </tiegt/GenericDataFrame(importManager)>{<[body.header.internalSymbolicParameters]:VariableName(); separator=", ">});
>> 

SingleMatch(engine, importManager, body, chain) ::= <<
return new </tiegt/GenericDataFrame(importManager)>{<[body.header.internalSymbolicParameters]:VariableName(); separator=", ">};
>>

MatchSingleMethod(engine, importManager, body, adornment, boundSymbolicParameters, chain, alwaysSuccessful) ::= <<
public static final </tiegt/GenericDataFrame(importManager)> <body.header.name; format="lowercase"><adornment>(<boundSymbolicParameters:VariableTypeAndName(importManager); separator=", ">) {
  <if (chain)><(chain.value.template)(engine, importManager, body, chain)>
  <if (!alwaysSuccessful)>return null;<endif>
  <else><SingleMatch(engine, importManager, body, chain)>
  <endif>
}
>>

MatchAllMethod(engine, importManager, body, adornment, boundSymbolicParameters, chain, alwaysSuccessful) ::= <<
public static final <Iterable(importManager)>\<</tiegt/GenericDataFrame(importManager)>\> <body.header.name; format="lowercase"><adornment>(<boundSymbolicParameters:VariableTypeAndName(importManager); separator=", ">) {
  <LinkedList(importManager)>\<</tiegt/GenericDataFrame(importManager)>\> result = new <LinkedList(importManager)>\<>();
  <(chain.value.template)(engine, importManager, body, chain)>
  return result;
}
>>

Iterable(importManager) ::= <<
<importManager.("java.lang.Iterable")>
>>

LinkedList(importManager) ::= <<
<importManager.("java.util.LinkedList")>
>>