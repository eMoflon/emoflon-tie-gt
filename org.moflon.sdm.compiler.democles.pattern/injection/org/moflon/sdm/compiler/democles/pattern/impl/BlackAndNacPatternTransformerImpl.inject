
import org.gervarro.democles.specification.emf.constraint.emf.emf.EMFTypePackage;
import org.gervarro.democles.specification.emf.constraint.emf.emf.EMFVariable;
import org.eclipse.emf.ecore.EcorePackage;

partial class BlackAndNacPatternTransformerImpl {



@model areCompatibleTypes (EClassifier first, EClassifier second) <--

		EClass eClass = EcorePackage.eINSTANCE.getEClass();
		if (eClass.isInstance(first) && eClass.isInstance(second)) {
		   EClass firstClass = (EClass)first;
		   EClass secondClass = (EClass)second;
			return first == second || firstClass.isSuperTypeOf(secondClass) || secondClass.isSuperTypeOf(firstClass);
		} else {
			return false;
		}
-->

@model injectiveMappingRequired (Variable first, Variable second) <--

		EClass emfVariableClass = EMFTypePackage.eINSTANCE.getEMFVariable();
		if (emfVariableClass.isInstance(first)
				&& emfVariableClass.isInstance(second)) {
			return areCompatibleTypes(((EMFVariable) first).getEClassifier(),
					((EMFVariable) second).getEClassifier());
		}
		return false;
-->

}