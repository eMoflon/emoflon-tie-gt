
import org.eclipse.emf.ecore.EClassifier;
import org.gervarro.democles.specification.emf.ConstraintVariable;
import org.gervarro.democles.specification.emf.constraint.emf.emf.EMFVariable;
import org.moflon.sdm.constraints.democles.TypedConstant;

partial class AttributeConstraintLibraryImpl {



@model lookupConstraintType (AttributeVariableConstraint constraint) <--

		for (ConstraintSpecification constSpec : this.getConstraintSpecifications()) {
			if (constSpec.getSymbol().equals(constraint.getPredicateSymbol())) {
				if (constraint.getParameters().size() == constSpec.getParameterTypes().size()) {
					boolean successful = true;
					for (int i = 0; i < constraint.getParameters().size(); i++) {
						ConstraintVariable cVariable = constraint.getParameters().get(i).getReference();
						EClassifier typeA = null;
						if (cVariable instanceof EMFVariable) {
							typeA = ((EMFVariable) cVariable).getEClassifier();
						}
						if (cVariable instanceof TypedConstant) {
							typeA = ((TypedConstant) cVariable).getEClassifier();
						}

						if (typeA != null) {

							EClassifier typeB = constSpec.getParameterTypes().get(i).getType();
							if (typeA != typeB) {
								successful = false;
								break;
							}
						} else {
							throw new RuntimeException("AttributeConstraintLibrary: unknown variable type: "
									+ cVariable.getClass().getName());
						}
					}
					if (successful) {
						return constSpec;
					}
				}

			}

		}
		return null;
-->

}