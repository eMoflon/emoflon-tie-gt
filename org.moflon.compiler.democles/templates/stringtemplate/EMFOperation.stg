BackwardExtendToMany(engine, importManager, body, chain) ::= <<
for (<importManager.(chain.value.operation.type.linkedElement.genModelElement.genClass.typeName)> <first(chain.value.operation.parameters):/democles/ParameterName(importManager, false, false)> : <first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager, true, false)>.<chain.value.operation.type.linkedElement.genModelElement.reverse.getAccessor>()) {
	<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
}
>>

BackwardExtendToOne(engine, importManager, body, chain) ::= <<
<importManager.(chain.value.operation.type.linkedElement.genModelElement.genClass.typeName)> <first(chain.value.operation.parameters):/democles/ParameterName(importManager, false, true)> = <first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.reverse.getAccessor>();
<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
>>

CheckToMany(engine, importManager, body, chain) ::= <<
if (<first(chain.value.operation.parameters):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.getAccessor>().contains(<first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager)>)) {
	<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
}
>>

CheckToOne(engine, importManager, body, chain) ::= <<
if (<first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager)>.equals(<first(chain.value.operation.parameters):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.getAccessor>())) {
	<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
}
>>

ForwardExtendToMany(engine, importManager, body, chain) ::= <<
for (<importManager.(chain.value.operation.type.linkedElement.genModelElement.returnType)> <first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager, false, true)> : <first(chain.value.operation.parameters):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.getAccessor>()) {
	<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
}
>>

ForwardExtendToOne(engine, importManager, body, chain) ::= <<
<importManager.(chain.value.operation.type.linkedElement.genModelElement.returnType)> <first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager, false, true)> = <first(chain.value.operation.parameters):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.getAccessor>();
<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
>>

TypeCheck(engine, importManager, body, chain) ::= <<
if (<first(chain.value.operation.parameters):/democles/ParameterName(importManager, true, true)> instanceof <importManager.(chain.value.operation.type.linkedElement)>) {
	<importManager.(chain.value.operation.type.linkedElement)> <first(chain.value.operation.parameters):/democles/ParameterName(importManager, false, false)> = (<importManager.(chain.value.operation.type.linkedElement)>) <first(chain.value.operation.parameters):/democles/ParameterName(importManager, true, true)>;
	<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
}
>>

InvokeOperation(engine, importManager, body, chain) ::= <<
<if (chain.value.operation.type.linkedElement.eType)><importManager.(chain.value.operation.type.linkedElement.eType)> <first(chain.value.operation.parameters):/democles/ParameterName(importManager, false, false)> = <first(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager, false, false)>.<chain.value.operation.type.linkedElement.genModelElement.name>(<rest(rest(chain.value.operation.parameters)):/democles/ParameterName(importManager); separator=", ">);<else><first(chain.value.operation.parameters):/democles/ParameterName(importManager)>.<chain.value.operation.type.linkedElement.genModelElement.name>(<rest(chain.value.operation.parameters):/democles/ParameterName(importManager); separator=", ">);<endif>
<if (chain.next)><(chain.next.value.template)(engine, importManager, body, chain.next)><endif>
>>